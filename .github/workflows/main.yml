# main/yml
# This workflow will install Python dependencies, run tests using Pytests
# and finally deploy the FastAPI app to AWS Lambda
name: SNSAPI CI/CD

on:
    # Trigger the workflow on push
    push:
        # Push events on main branch
        branches: [main]        
    pull_request:
        # Pull request events on main branch
        branches: [main]

# The Job defines a series of steps that execute on the same runner
jobs:
    CI:
        # runs-on: defines the workflow runner
        runs-on: ubuntu-latest
        
        # steps: defines a series of tasks executed by the Job
        steps:
            # Check out repository so our workflow can access it
            - uses: actions/checkout@v2

            # Step-1 Set up Python using actions/setup-python@v2 Github action
            - name: Set up Python 3.8
              uses: actions/setup-python@v2
              with:
                python-version: 3.8
            
            # Step-2 Install Python Virtual ENV
            - name: Install Python Virtual ENV
              run: pip3 install virtualenv
            
            # Step-3 Set up Virtual ENV
            - name: Virtual ENV
              uses: actions/cache@v2
              id: cache-venv
              with:
                # A directory to store and save the cache
                path: venv

                # An explicit key for restoring and saving the cache
                key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements.txt') }}

                # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
                restore-keys: ${{ runner.os }}-venv-
            
            # Step-4 Build a Virtual ENV, but only if it doesn't already exist
            - name: Activate Virtual ENV
              run: python -m venv venv && source venv/bin/activate && pip3 install -r requirements.txt
              if: steps.cache-venv.outputs.cache_hit != 'true'
            
            # Install all dependencies  
            - name: Install dependencies
              run: pip3 install -r requirements.txt  

            # Step-5 Running Tests
            - name: Run Tests
              # Note that you have to activate the virtualenv in every step because Github actions doesn't preserve the environment
              run: . venv/bin/activate && pytest
            
            # Step-6 
            - name: Create archive of dependencies
              run: |
                    cd ./venv/lib/python3.8/site-packages
                    zip -r9 ../../../../api.zip .
            
            # Step-7 
            - name: Add API files to Zip file
              run: cd ./api && zip -g ../api.zip -r .

            # Step-8 Upload Zip file
            # uploads artifacts from my workflow to enable sharing data between jobs
            # Stores data once a workflow is complete
            - name: Upload zip file
              uses: actions/upload-artifact@v2
              with:
                name: api
                path: api.zip